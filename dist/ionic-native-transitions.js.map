{"version":3,"sources":["webpack:///webpack/bootstrap eadf50c1854ae3c2eb4f","webpack:///./lib/index.js","webpack:///./lib/provider.js","webpack:///./lib/directive.js","webpack:///./lib/run.js"],"names":[],"mappings":"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","file":"ionic-native-transitions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap eadf50c1854ae3c2eb4f\n **/","import Provider from './provider.js';\nimport Directive from './directive.js';\nimport Run from './run.js';\n\nlet mod = angular.module('ionic-native-transitions', [\n    'ionic'\n]);\n\nmod.directive('nativeTransitions', Directive);\nmod.provider('$ionicNativeTransitions', Provider);\nmod.run(Run);\n\nexport default mod = mod.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/index.js\n **/","/**\n * @ngdoc service\n * @name ionic-native-transitions.$ionicNativeTransitions\n * @description\n * ionic-native-transitions service\n */\n/**\n * @ngdoc service\n * @name ionic-native-transitions.$ionicNativeTransitionsProvider\n * @description\n * ionic-native-transitions provider\n */\nexport default function() {\n    'ngInject';\n\n    let enabled = true,\n        options = {\n            \"duration\": 400, // in milliseconds (ms), default 400\n            \"slowdownfactor\": 4, // overlap views (higher number is more) or no overlap (1), default 4\n            \"iosdelay\": 60, // ms to wait for the iOS webview to update before animation kicks in, default 60\n            \"androiddelay\": 70, // same as above but for Android, default 70\n            \"winphonedelay\": 200, // same as above but for Windows Phone, default 200,\n            \"fixedPixelsTop\": 0, // the number of pixels of your fixed header, default 0 (iOS and Android)\n            \"fixedPixelsBottom\": 0 // the number of pixels of your fixed footer (f.i. a tab bar), default 0 (iOS and Android)\n        };\n\n    return {\n        $get,\n        enable,\n        setOptions\n    };\n\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitionsProvider#enable\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitionsProvider\n     *\n     * @description\n     * Overwrite default nativepagetransitions plugin options\n     * @param {object} injectedOptions  options that will overwrite defaults\n     */\n    function enable(enabled = true) {\n        enable = enabled;\n        return this;\n    }\n\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitionsProvider#isEnabled\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitionsProvider\n     *\n     * @description\n     * Is ionic-native-transitions enabled or not?\n     */\n     /**\n      * @ngdoc function\n      * @name ionic-native-transitions.$ionicNativeTransitions#isEnabled\n      * @access public\n      * @methodOf ionic-native-transitions.$ionicNativeTransitions\n      *\n      * @description\n      * Is ionic-native-transitions enabled or not?\n      */\n    function isEnabled() {\n        return enable;\n    }\n\n    /**\n     * @ngdoc function\n     * @name ionic-native-transitions.$ionicNativeTransitionsProvider#setOptions\n     * @access public\n     * @methodOf ionic-native-transitions.$ionicNativeTransitionsProvider\n     *\n     * @description\n     * Overwrite default nativepagetransitions plugin options\n     * @param {object} injectedOptions  options that will overwrite defaults\n     */\n    function setOptions(injectedOptions = {}) {\n        angular.extend(options, injectedOptions);\n        return this;\n    }\n\n    function $get($log, $ionicConfig) {\n        'ngInject';\n\n        return {\n            init,\n            isEnabled\n        };\n\n        /**\n         * @ngdoc function\n         * @name ionic-native-transitions.$ionicNativeTransitions#init\n         * @access public\n         * @methodOf ionic-native-transitions.$ionicNativeTransitions\n         *\n         * @description\n         * Init nativepagetransitions plugin\n         */\n        function init() {\n            if (!enable) {\n                $log.info('nativepagetransitions is disabled');\n                return;\n            }\n            if (window.cordova && window.plugins && window.plugins.nativepagetransitions) {\n                $ionicConfig.views.transition('none');\n                angular.extend(window.plugins.nativepagetransitions.globalOptions, options);\n            } else {\n                $log.info('nativepagetransitions plugin does not exist, cannot initialize.');\n            }\n        }\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/provider.js\n **/","export default function($log, $ionicNativeTransitions) {\n    'ngInject';\n\n    return {\n        link: Link,\n        restrict: 'A',\n        scope: false\n    };\n\n    function Link(scope, element, attrs) {\n        'ngInject';\n\n        if (!$ionicNativeTransitions.isEnabled()) {\n            return;\n        }\n\n        let options = {};\n\n        attrs.$observe('nativeTransitionsOptions', (newOptions) => {\n            let evalOptions = scope.$eval(newOptions);\n            options = angular.isObject(evalOptions) ? evalOptions : {};\n        });\n\n        element.on('click', (event) => {\n            if (window.cordova && window.plugins && window.plugins.nativepagetransitions) {\n                let plugin = window.plugins.nativepagetransitions;\n                switch (options.type) {\n                    case 'flip':\n                        window.plugins.nativepagetransitions.flip(options, success, error);\n                        break;\n                    case 'fade':\n                        window.plugins.nativepagetransitions.fade(options, success, error);\n                        break;\n                    case 'curl':\n                        window.plugins.nativepagetransitions.curl(options, success, error);\n                        break;\n                    case 'drawer':\n                        window.plugins.nativepagetransitions.drawer(options, success, error);\n                        break;\n                    case 'slide':\n                    default:\n                        window.plugins.nativepagetransitions.slide(options, success, error);\n                        break;\n                }\n            }\n        });\n\n        function success(msg) {\n            $log.info('transition success', msg);\n        }\n\n        function error(msg) {\n            $log.info('transition error', msg);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/directive.js\n **/","/**\n * @ngdoc service\n * @name ionic-native-transitions.$ionicNativeTransitions\n * @description\n * ionic-native-transitions service\n */\n/**\n * @ngdoc service\n * @name ionic-native-transitions.$ionicNativeTransitionsProvider\n * @description\n * ionic-native-transitions provider\n */\nexport default function($ionicNativeTransitions, $ionicPlatform) {\n    'ngInject';\n\n    $ionicPlatform.ready(function() {\n        $ionicNativeTransitions.init();\n    });\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/run.js\n **/"],"sourceRoot":""}